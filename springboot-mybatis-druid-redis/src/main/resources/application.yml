# 端口
server:
  port: 8000

spring:
  datasource:
    name: demo
    # 数据连接池类型
    type: com.alibaba.druid.pool.DruidDataSource
    # druid数据连接池配置
    druid:
      driver-class-name: com.mysql.jdbc.Driver
      # 数据库url
      url: jdbc:mysql://localhost:3306/demo?serverTimezone=CTT&characterEncoding=utf-8&useSSL=false
      # 数据库账号
      username: root  
      # 数据库密码
      password: 123456
      # 数据连接池初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat
      use-global-data-source-stat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 配置监控服务器
      stat-view-servlet:
        # druid 1.1.0以上版本enbled必须为true
        enabled: true
        # 浏览输入http://localhost:8888/druid即可访问druid后台管理
        login-username: admin
        login-password: 123456
        reset-enable: false
        url-pattern: /druid/*
  # redis配置
  redis:
    # redis服务器地址
    host: localhost
    # redis服务器端口
    port: 6379
    # redis服务器连接密码（默认为空）
    password: 
    # 连接超时（毫秒）
    timeout: 1000
    jedis:
      pool:
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 30000
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 200
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 0
        

  # 页面加载
  # thymeleaf:
  #   cache: false
  resources:
    chain:
      cache: false

mybatis:
  mapper-locations: classpath:mapper/*.xml  # 注意：一定要对应mapper映射xml文件的所在路径
  type-aliases-package: com.example.springbootdemo.model  # 注意：对应实体类的路径